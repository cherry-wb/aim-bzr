##########################################################################################
#               _/\/\/\/\/\____/\/\/\/\__/\/\/\/\/\____/\/\_______                       #
#               _/\/\____/\/\____/\/\____/\/\____/\/\__/\/\_______                       #
#               _/\/\/\/\/\______/\/\____/\/\____/\/\__/\/\_______                       #
#               _/\/\__/\/\______/\/\____/\/\____/\/\__/\/\_______                       #
#               _/\/\____/\/\__/\/\/\/\__/\/\/\/\/\____/\/\/\/\/\_                       #
#               __________________________________________________                       #
##########################################################################################
# Part of RIDL, the RUR IDL builder which generates modules for middlewares, including 
# lightweight (robotic) middleware like YARP. 
# This makefile is part of a cmake build system. The code falls under the Lesser General 
# Public License (LGPL GNU v3).

# Author:	 Anne C. van Rossum (Almende B.V.)
# Date: 	 Oct. 23, 2012
#
# ASCII Art generated by: http://www.network-science.de/ascii/ with font "ticks".
#
# Copyright Â© 2012 Anne van Rossum <anne@almende.com>
##########################################################################################

IF(WIN32)
cmake_minimum_required(VERSION 2.6)
ELSE(WIN32)
cmake_minimum_required(VERSION 2.4)
ENDIF(WIN32)

# Set name of project
SET(PROJECT_NAME "BeliefModule")

# Start a project
PROJECT(${PROJECT_NAME})

# Include aim stuff
ADD_SUBDIRECTORY(aim)

# The directory with some of the FindXXX modules
SET(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${CMAKE_SOURCE_DIR}/cmake/")
MESSAGE("[*] Search for FindX files in ${CMAKE_SOURCE_DIR}/cmake")

# Include eigen-specific code (the matrix library)
OPTION(BUILD_EIGEN OFF "Build module with Eigen support")
CONFIGURE_FILE(${CMAKE_SOURCE_DIR}/config.h.in ${CMAKE_SOURCE_DIR}/inc/config.h)

# Find the Eigen include directories (no libraries, templates allow Eigen to be header-only)
IF (BUILD_EIGEN) 
  MESSAGE("[*] Eigen support, will enable all (sparse) matrix related code")
  FIND_PACKAGE(Eigen3 REQUIRED)
  INCLUDE_DIRECTORIES(${EIGEN3_INCLUDE_DIR})
ENDIF()

SET(CMAKE_CXX_FLAGS -std=c++11)

# Some debug information
MESSAGE("[*] \"${PROJECT_NAME}\" uses the following CXX flags: \"${CMAKE_CXX_FLAGS}\" (can be empty)")
MESSAGE ("[*] Libraries included: ${LIBS}")

# Source directory
SET(SOURCE_DIR "src")
SET(INCLUDE_DIR "inc")

# Search for functional source code
FILE(GLOB folder_source ${SOURCE_DIR}/*.cpp ${SOURCE_DIR}/*.cc ${SOURCE_DIR}/*.c)
FILE(GLOB folder_header ${INCLUDE_DIR}/*.h ${INCLUDE_DIR}/*.hh ${INCLUDE_DIR}/*.hpp)
SOURCE_GROUP("Source files" FILES ${folder_source})
SOURCE_GROUP("Header files" FILES ${folder_header})

# Automatically add include directories if needed.
FOREACH(header_file ${folder_header})
  GET_FILENAME_COMPONENT(p ${header_file} PATH)
  INCLUDE_DIRECTORIES(${p})
ENDFOREACH(header_file ${folder_header})

# For references to header files
INCLUDE_DIRECTORIES(aim/inc)

SET(PROJECT_HEADER ../aim/inc/${PROJECT_NAME}.h)
IF (NOT EXISTS ${PROJECT_HEADER})
  MESSAGE(FATAL_ERROR "No ${PROJECT_HEADER} header file found. "
  "Did the RurBuilder run and generate something in aim/inc? " 
  "Did you install omniidl by e.g.\n" 
  "  \"sudo apt-get install omniidl\"?")
ENDIF() 

MESSAGE ("[*] Files included: ${AIM_FILES}")

# Set up our main executable.
IF (folder_source)
   ADD_EXECUTABLE(${PROJECT_NAME} ${folder_source} ${folder_header} ${AIM_FILES})
   TARGET_LINK_LIBRARIES(${PROJECT_NAME} ${LIBS})
   install(TARGETS ${PROJECT_NAME} RUNTIME DESTINATION bin)   
ELSE ()
  MESSAGE(FATAL_ERROR "No source code files found. Please add something")
ENDIF ()

