##########################################################################################
#               _/\/\/\/\/\____/\/\/\/\__/\/\/\/\/\____/\/\_______                       #
#               _/\/\____/\/\____/\/\____/\/\____/\/\__/\/\_______                       #
#               _/\/\/\/\/\______/\/\____/\/\____/\/\__/\/\_______                       #
#               _/\/\__/\/\______/\/\____/\/\____/\/\__/\/\_______                       #
#               _/\/\____/\/\__/\/\/\/\__/\/\/\/\/\____/\/\/\/\/\_                       #
#               __________________________________________________                       #
##########################################################################################
# Part of RIDL, the RUR IDL builder which generates modules for middlewares, including 
# lightweight (robotic) middleware like YARP. 
# This makefile is part of a cmake build system. The code falls under the Lesser General 
# Public License (LGPL GNU v3).

# Author:	 Anne C. van Rossum (Almende B.V.)
# Date: 	 Oct. 23, 2012
#
# ASCII Art generated by: http://www.network-science.de/ascii/ with font "ticks".
#
# Copyright Â© 2012 Anne van Rossum <anne@almende.com>
##########################################################################################

IF(WIN32)
cmake_minimum_required(VERSION 2.6)
ELSE(WIN32)
cmake_minimum_required(VERSION 2.4)
ENDIF(WIN32)

if(COMMAND cmake_policy)
	cmake_policy(SET CMP0003 NEW)
endif(COMMAND cmake_policy)

# Set name of project
SET(PROJECT_NAME "MovingAverageModule")

# Start a project
PROJECT(${PROJECT_NAME})

# Include aim stuff
ADD_SUBDIRECTORY(aim)

# Some debug information
MESSAGE("[*] \"${PROJECT_NAME}\" uses the following CXX flags: \"${CMAKE_CXX_FLAGS}\" (can be empty)")
MESSAGE("[*] Libraries included: ${LIBS}")

# Source directory
SET(SOURCE_DIR "src")
SET(INCLUDE_DIR "inc")

# Search for functional source code
FILE(GLOB FOLDER_SOURCE ${SOURCE_DIR}/*.cpp ${SOURCE_DIR}/*.cc ${SOURCE_DIR}/*.c)
FILE(GLOB FOLDER_HEADER ${INCLUDE_DIR}/*.h ${INCLUDE_DIR}/*.hh ${INCLUDE_DIR}/*.hpp)

# For Visual Studio group the files
SOURCE_GROUP("Source files" FILES ${FOLDER_SOURCE})
SOURCE_GROUP("Header files" FILES ${FOLDER_HEADER})

# Automatically add include directories if needed.
FOREACH(HEADER_FILE ${FOLDER_HEADER})
  GET_FILENAME_COMPONENT(HEADER_DIR ${HEADER_FILE} PATH)
  INCLUDE_DIRECTORIES(${HEADER_DIR})
ENDFOREACH(HEADER_FILE ${FOLDER_HEADER})

# For references to header files
INCLUDE_DIRECTORIES(aim/inc)

SET(PROJECT_HEADER ../aim/inc/${PROJECT_NAME}.h)
IF (NOT EXISTS ${PROJECT_HEADER})
  MESSAGE(FATAL_ERROR "No ${PROJECT_HEADER} header file found. "
  "Did the RurBuilder run and generate something in aim/inc? " 
  "Did you install omniidl by e.g.\n" 
  "  \"sudo apt-get install omniidl\"?")
ENDIF() 

MESSAGE("[*] Files included: ${AIM_FILES} ${FOLDER_HEADER}")

# Set up our main executable.
IF(FOLDER_SOURCE STREQUAL "")
  MESSAGE(FATAL_ERROR "No source code files found. Please add something")
ELSE ()
  ADD_EXECUTABLE(${PROJECT_NAME} ${FOLDER_SOURCE} ${FOLDER_HEADER} ${AIM_FILES})
  TARGET_LINK_LIBRARIES(${PROJECT_NAME} ${LIBS})
  INSTALL(TARGETS ${PROJECT_NAME} RUNTIME DESTINATION bin)   
ENDIF ()

