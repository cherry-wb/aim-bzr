#!/bin/bash

PROGRAM="aimlist"

VERSION="$PROGRAM 0.1"

####################################################################################################
# Default configuration
####################################################################################################

# Installation paths
RUR_BIN_PATH=/usr/bin
RUR_SHARE_PATH=/usr/share/rur
RUR_TEMPLATE_PATH=$RUR_SHARE_PATH/templates
RUR_BACKENDS_PATH=$RUR_SHARE_PATH/backends
RUR_CONFIG_PATH=/etc/rur

# Working paths
RUR_DATA_PATH=$HOME/.rur/data
RUR_REGISTRY_PATH=$RUR_DATA_PATH/registry

# Configuration files
RUR_CONFIG_FILE_BACKENDS=${RUR_CONFIG_PATH}/backends.conf
RUR_CONFIG_FILE_BACKENDS_CMAKE=${RUR_CONFIG_PATH}/backends.cmake

# Data(base) files
AIM_REGISTRY=${RUR_DATA_PATH}/aim_registry.txt

# Prepend with destination dir if DESTDIR is present
RUR_SHARE_PATH="$DESTDIR/$RUR_SHARE_PATH"
RUR_TEMPLATE_PATH="$DESTDIR/$RUR_TEMPLATE_PATH"
RUR_BACKENDS_PATH="$DESTDIR/$RUR_BACKENDS_PATH"
RUR_CONFIG_PATH="$DESTDIR/$RUR_CONFIG_PATH"


####################################################################################################
# User configuration
####################################################################################################

if [ -e ${RUR_CONFIG_FILE_BACKENDS} ]; then
	source $RUR_CONFIG_FILE_BACKENDS
fi

####################################################################################################
# Checks
####################################################################################################

if [[ "$1" == "-h" ]]
then
	echo $VERSION \- Usage
	echo 
	echo "$PROGRAM mode"
	echo "  mode=0 means to list all CS* modules"
	echo "  mode=1 means to list all non-Login modules"
	echo
	exit 0 
elif [ $# -ne 1 ]
then
	echo "[#] One and only one argument is expected!"
	exit 1
fi 


MODULE_FULLNAME=
FirstTwo=
index=0
while read LINE; 
do
	MODULE_I=`echo "$LINE" | cut -d'=' -f 1 | sed 's/ *$//g'`
        MODULE_I=${MODULE_I%/}
        FirstTwo=`echo "$MODULE_I" | cut -c1-2`
        MiddleFive=`echo "$MODULE_I" | cut -c3-7`
        if [ "$1" -eq 0 ]; then
          if [[ "$FirstTwo" != "CS" ]]; then 
             Registered_Module[$index]=$MODULE_I
             # echo $index
	     index=$(($index + 1))
          fi
        elif [ "$1" -eq 1 ]; then
          if [[ "$MiddleFive" != "Login" ]]
          then
          	Registered_Module[$index]=$MODULE_I
          	index=$(($index + 1))
          fi
        else
          echo "[#] Only two modes (0 and 1) are expected, please check!"
	  exit 1
        fi

#	echo $LINE
#	echo $M_I_STRIPPED
done < "${AIM_REGISTRY}"
#echo $index
#echo "success!!"

tLen=${#Registered_Module[@]}

# use for loop read all nameservers
echo "{"
echo "  \"modules\": ["
for (( i=0; i<${tLen}; i++ ));
do
  echo "    {"
  echo "      \"name\": \"${Registered_Module[$i]}\""
  if [ $i -eq $((${tLen} - 1)) ]; then
    echo "    }"
  else
    echo "    },"
  fi
done
echo "  ] "
echo "}"



